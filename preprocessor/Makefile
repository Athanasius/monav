#############################################################################
# Makefile for building: ../bin/monav-preprocessor
# Generated by qmake (2.01a) (Qt 4.8.6) on: Sat Sep 3 15:48:00 2016
# Project:  preprocessor.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile preprocessor.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -D_7ZIP_ST -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -pthread -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O3 -march=native -Wno-unused-function -fopenmp -pthread -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4 -I.. -I/usr/include/libxml2 -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L../bin/plugins_preprocessor -lmapnikrenderer -lcontractionhierarchies -lgpsgrid -losmrenderer -lqtilerenderer -lunicodetournamenttrie -losmimporter -ltestimporter -fopenmp -lmapnik -lbz2 -lz -lxml2 -lprotobuf -pthread -lQtCore -lQtGui -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../utils/commandlineparser.cpp \
		pluginmanager.cpp \
		../utils/log.cpp \
		console-main.cpp \
		../utils/directorypacker.cpp \
		../utils/lzma/LzmaEnc.c \
		../utils/lzma/LzFind.c moc_pluginmanager.cpp \
		moc_log.cpp
OBJECTS       = commandlineparser.o \
		pluginmanager.o \
		log.o \
		console-main.o \
		directorypacker.o \
		LzmaEnc.o \
		LzFind.o \
		moc_pluginmanager.o \
		moc_log.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		preprocessor.pro
QMAKE_TARGET  = monav-preprocessor
DESTDIR       = ../bin/
TARGET        = ../bin/monav-preprocessor

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../bin/ || $(MKDIR) ../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: preprocessor.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile preprocessor.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile preprocessor.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/monav-preprocessor1.0.0 || $(MKDIR) .tmp/monav-preprocessor1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/monav-preprocessor1.0.0/ && $(COPY_FILE) --parents ../interfaces/iimporter.h ../utils/coordinates.h ../utils/config.h ../interfaces/ipreprocessor.h ../interfaces/iguisettings.h ../interfaces/iconsolesettings.h ../utils/commandlineparser.h ../utils/formattedoutput.h pluginmanager.h ../utils/log.h ../utils/directorypacker.h ../utils/lzma/Types.h ../utils/lzma/LzmaEnc.h ../utils/lzma/LzFind.h ../utils/lzma/LzHash.h .tmp/monav-preprocessor1.0.0/ && $(COPY_FILE) --parents ../utils/commandlineparser.cpp pluginmanager.cpp ../utils/log.cpp console-main.cpp ../utils/directorypacker.cpp ../utils/lzma/LzmaEnc.c ../utils/lzma/LzFind.c .tmp/monav-preprocessor1.0.0/ && (cd `dirname .tmp/monav-preprocessor1.0.0` && $(TAR) monav-preprocessor1.0.0.tar monav-preprocessor1.0.0 && $(COMPRESS) monav-preprocessor1.0.0.tar) && $(MOVE) `dirname .tmp/monav-preprocessor1.0.0`/monav-preprocessor1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/monav-preprocessor1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_pluginmanager.cpp moc_log.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_pluginmanager.cpp moc_log.cpp
moc_pluginmanager.cpp: pluginmanager.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) pluginmanager.h -o moc_pluginmanager.cpp

moc_log.cpp: ../utils/log.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../utils/log.h -o moc_log.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

commandlineparser.o: ../utils/commandlineparser.cpp ../utils/commandlineparser.h \
		../utils/formattedoutput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commandlineparser.o ../utils/commandlineparser.cpp

pluginmanager.o: pluginmanager.cpp pluginmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pluginmanager.o pluginmanager.cpp

log.o: ../utils/log.cpp ../utils/log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o log.o ../utils/log.cpp

console-main.o: console-main.cpp pluginmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o console-main.o console-main.cpp

directorypacker.o: ../utils/directorypacker.cpp ../utils/directorypacker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o directorypacker.o ../utils/directorypacker.cpp

LzmaEnc.o: ../utils/lzma/LzmaEnc.c ../utils/lzma/LzmaEnc.h \
		../utils/lzma/Types.h \
		../utils/lzma/LzFind.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o LzmaEnc.o ../utils/lzma/LzmaEnc.c

LzFind.o: ../utils/lzma/LzFind.c ../utils/lzma/LzFind.h \
		../utils/lzma/Types.h \
		../utils/lzma/LzHash.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o LzFind.o ../utils/lzma/LzFind.c

moc_pluginmanager.o: moc_pluginmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pluginmanager.o moc_pluginmanager.cpp

moc_log.o: moc_log.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_log.o moc_log.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

